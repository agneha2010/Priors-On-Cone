out1 = q2d(out$output)
Delta = t(out1[,-c(1:2)])
dim(Delta)
adjacency = out$adjacency
adj.list = graph_from_adj_list(adjacency, mode = c("out", "in", "all", "total"),duplicate = TRUE)
adj.mat = as_adjacency_matrix(adj.list, sparse=F)
### cliques
graph.list = graph_from_adjacency_matrix(adj.mat, "undirected", weighted=T, diag=F)
clique.list = max_cliques(graph.list)
clique.size = unlist(lapply(clique.list,length))
degree = clique.size
l = count_max_cliques(graph.list)
BS <- bsplineS(xt/Ti, breaks = seq(0, 1, 1/knot))
Deltatilde <- BS %*% Delta
gamma_ls <- list()
Als <- list()
for(i in 1:n){
#i=1
ni <- 1:Ti
Als[[i]] <- bsplineS(xt[ni]/Ti, breaks = seq(0, 1, 1/knot))
}
X <- Deltatilde
cliques=clique.list
Total_itr=30
id = rep(1:n,each=Ti)
RS <- fitting(y, X, BS1, cliques=clique.list, Total_itr=100, id, Als)
#URS1 <- fittingUN(y, xt, Ti, Total_itr=30)
result = cbind(result,RS$esti)
colnames(result)[5] = c("RS")
write.csv(result , "ydata7.log.csv")
dat.true = data.frame(x=1:Ti,y=colMeans(ydata7.log))
df.plot = melt(result,id.vars = "x")
p1 = ggplot()+
geom_line(data = df.plot,aes(x=x,y=value,color=variable))+
#  scale_linetype_manual(values=c("dashed","solid","solid","solid"))+
theme(text = element_text(size = 30))+
geom_point(data = dat.true,aes(x=x,y=y))+ ylab("activity") + xlab("Time (in hours)")
p1
ggsave('ydata7.log.png', p1, width = 17,height=11, dpi = 300)
result1 = read.csv("ydata1.log.csv")
result2 = read.csv("ydata2.log.csv")
result3 = read.csv("ydata3.log.csv")
result4 = read.csv("ydata4.log.csv")
result5 = read.csv("ydata5.log.csv")
result6 = read.csv("ydata6.log.csv")
result7 = read.csv("ydata7.log.csv")
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
View(result)
result = bind_rows(exp(result1[,-1]),result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
result = bind_rows(exp(result1[,-1]),exp(result2[,-1]),exp(result3[,-1]),
exp(result4[,-1]),exp(result5[,-1]),
exp(result6[,-1]),exp(result7[,-1]),.id="id")
result$id = as.factor(result$id)
#levels(result$id) = c("Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7")
levels(result$id) = c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
df.plot = melt(result,id.vars = c("x","id"))
df.plot$Method = as.factor(df.plot$variable)
levels(df.plot$Method) = c("Restricted","Unrestricted spline",
"Unrestricted","Restricted spline")
day1 = data.frame(x=1:Ti,y=colMeans(ydata1))
day2 = data.frame(x=1:Ti,y=colMeans(ydata2))
day4 = data.frame(x=1:Ti,y=colMeans(ydata4))
day5 = data.frame(x=1:Ti,y=colMeans(ydata5))
day6 = data.frame(x=1:Ti,y=colMeans(ydata6))
day7 = data.frame(x=1:Ti,y=colMeans(ydata7))
ydata1 <- ydatar[Sind1, ]
ind1 <- which(is.na(rowMeans(ydata1)==T))
if(length(ind1)) {ydata1 <- ydata1[-ind1, ]}
day1 = apply(ydata1,2,median)
day1.mean = colMeans(ydata1)
plot(day1.mean,type="p")
plot(day1,type="p")
ydata1.log = log(ydata1+1)
# library(ggplot2)
# library(reshape2)
# library(RColorBrewer)
# library(ggpubr)
# ydata1 = as.data.frame(t(ydata1))
# ydata.plot = ydata1[,1:20]
# ydata.plot$x = 1:24
# dat = melt(ydata.plot,id.vars = "x")
# dat.mean = data.frame(x=1:24,y=day1.mean)
# p1 = ggplot()+
#   geom_line(data = dat,aes(x=x,y=value,color=variable),lwd=0.8)+
#   geom_line(data = dat.mean,aes(x=x,y=y),size=1.5,linetype="dashed")+
#   theme_classic()+
#   theme(legend.position="None",legend.key.size = unit(1.5, 'cm'),
#         legend.title = element_blank())+
#   theme(legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))+
#   theme(text = element_text(size = 30))+
#   labs(x ="Time (in hours)", y = "Hourly activity Count")+
#   scale_color_manual(values = c(brewer.pal(10, name="Spectral"),brewer.pal(10,  "Paired")))+
#   theme(panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank(),
#         panel.background = element_rect(colour = "black", size=0.9))
# p1
# ggsave('20_subjects.png', p1, width = 17,height=11, dpi = 300)
ydata2 <- ydatar[Sind2, ]
ind1 <- which(is.na(rowMeans(ydata2)==T))
if(length(ind1)) {ydata2 <- ydata2[-ind1, ]}
day2 = apply(ydata2,2,median)
#day2 = colMeans(ydata2)
plot(day2,type="l")
ydata2.log = log(ydata2+1)
ydata3 <- ydatar[Sind3, ]
ind1 <- which(is.na(rowMeans(ydata3)==T))
if(length(ind1)) {ydata3 <- ydata1[-ind1, ]}
day3 = apply(ydata3,2,median)
#day3 = colMeans(ydata3)
plot(day3,type="l")
ydata3.log = log(ydata3+1)
ydata4 <- ydatar[Sind4, ]
ind1 <- which(is.na(rowMeans(ydata4)==T))
if(length(ind1)) {ydata4 <- ydata4[-ind1, ]}
day4 = apply(ydata4,2,median)
#day4 = colMeans(ydata4)
plot(day4,type="l")
ydata4.log = log(ydata4+1)
ydata5 <- ydatar[Sind5, ]
ind1 <- which(is.na(rowMeans(ydata5)==T))
if(length(ind1)) {ydata5 <- ydata5[-ind1, ]}
day5 = apply(ydata5,2,median)
#day5 = colMeans(ydata5)
plot(day5,type="l")
ydata5.log = log(ydata5+1)
ydata6 <- ydatar[Sind6, ]
ind1 <- which(is.na(rowMeans(ydata6)==T))
if(length(ind1)) {ydata6 <- ydata6[-ind1, ]}
day6 = apply(ydata6,2,median)
#day6 = colMeans(ydata6)
plot(day6,type="l")
ydata6.log = log(ydata6+1)
ydata7 <- ydatar[Sind7, ]
ind1 <- which(is.na(rowMeans(ydata7)==T))
if(length(ind1)) {ydata7 <- ydata7[-ind1, ]}
day7 = apply(ydata7,2,median)
#day7 = colMeans(ydata7)
plot(day7,type="l")
ydata7.log = log(ydata7+1)
day1 = data.frame(x=1:Ti,y=exp(colMeans(ydata1.log)))
day2 = data.frame(x=1:Ti,y=exp(colMeans(ydata2.log)))
day3 = data.frame(x=1:Ti,y=exp(colMeans(ydata3.log)))
day4 = data.frame(x=1:Ti,y=exp(colMeans(ydata4.log)))
day5 = data.frame(x=1:Ti,y=exp(colMeans(ydata5.log)))
day6 = data.frame(x=1:Ti,y=exp(colMeans(ydata6.log)))
day7 = data.frame(x=1:Ti,y=exp(colMeans(ydata7.log)))
df.true = bind_rows(day1,day2,day3,day4,day5,day6,day7,.id="id")
df.true$id = as.factor(df.true$id)
#levels(df.true$id) = c("Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7")
levels(df.true$id) = c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
p1 = ggplot() +
geom_line(data = df.plot,aes(x=x,y=value,color=Method)) +
#  scale_linetype_manual(values=c("dashed","solid","solid","solid"))+
geom_point(data = df.true,aes(x=x,y=y)) +
ylab("Activity count") +
theme_bw() +
xlab("Time (in hours)") + facet_wrap(~id, dir="h") +
theme(text = element_text(size = 17),
legend.position=c(.7,.1),
plot.title = element_text(size = 15, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=15))
p1
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
result = exp(result[,3:6])
result1 = read.csv("ydata1.log.csv")
result2 = read.csv("ydata2.log.csv")
result3 = read.csv("ydata3.log.csv")
result4 = read.csv("ydata4.log.csv")
result5 = read.csv("ydata5.log.csv")
result6 = read.csv("ydata6.log.csv")
result7 = read.csv("ydata7.log.csv")
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
result[,3:6] = exp(result[,3:6])
result$id = as.factor(result$id)
#levels(result$id) = c("Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7")
levels(result$id) = c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
df.plot = melt(result,id.vars = c("x","id"))
df.plot$Method = as.factor(df.plot$variable)
levels(df.plot$Method) = c("Restricted","Unrestricted spline",
"Unrestricted","Restricted spline")
day1 = data.frame(x=1:Ti,y=exp(colMeans(ydata1)))
day2 = data.frame(x=1:Ti,y=exp(colMeans(ydata2)))
day3 = data.frame(x=1:Ti,y=exp(colMeans(ydata3)))
day4 = data.frame(x=1:Ti,y=exp(colMeans(ydata4)))
day5 = data.frame(x=1:Ti,y=exp(colMeans(ydata5)))
day6 = data.frame(x=1:Ti,y=exp(colMeans(ydata6)))
day7 = data.frame(x=1:Ti,y=exp(colMeans(ydata7)))
df.true = bind_rows(day1,day2,day3,day4,day5,day6,day7,.id="id")
df.true$id = as.factor(df.true$id)
#levels(df.true$id) = c("Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7")
levels(df.true$id) = c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
p1 = ggplot() +
geom_line(data = df.plot,aes(x=x,y=value,color=Method)) +
#  scale_linetype_manual(values=c("dashed","solid","solid","solid"))+
geom_point(data = df.true,aes(x=x,y=y)) +
ylab("Activity count") +
theme_bw() +
xlab("Time (in hours)") + facet_wrap(~id, dir="h") +
theme(text = element_text(size = 17),
legend.position=c(.7,.1),
plot.title = element_text(size = 15, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=15))
p1
day1 = data.frame(x=1:Ti,y=exp(colMeans(ydata1.log)))
day2 = data.frame(x=1:Ti,y=exp(colMeans(ydata2.log)))
day3 = data.frame(x=1:Ti,y=exp(colMeans(ydata3.log)))
day4 = data.frame(x=1:Ti,y=exp(colMeans(ydata4.log)))
day5 = data.frame(x=1:Ti,y=exp(colMeans(ydata5.log)))
day6 = data.frame(x=1:Ti,y=exp(colMeans(ydata6.log)))
day7 = data.frame(x=1:Ti,y=exp(colMeans(ydata7.log)))
df.true = bind_rows(day1,day2,day3,day4,day5,day6,day7,.id="id")
df.true$id = as.factor(df.true$id)
#levels(df.true$id) = c("Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7")
levels(df.true$id) = c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
p1 = ggplot() +
geom_line(data = df.plot,aes(x=x,y=value,color=Method)) +
#  scale_linetype_manual(values=c("dashed","solid","solid","solid"))+
geom_point(data = df.true,aes(x=x,y=y)) +
ylab("Activity count") +
theme_bw() +
xlab("Time (in hours)") + facet_wrap(~id, dir="h") +
theme(text = element_text(size = 17),
legend.position=c(.7,.1),
plot.title = element_text(size = 15, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=15))
p1
ggsave('all7days.png', p1, width = 17,height=11, dpi = 300)
library(rnhanesdata)
library(ggplot2)
## load the data
data("PAXINTEN_C");data("PAXINTEN_D")
data("Flags_C");data("Flags_D")
#data("Mortality_2011_C");data("Mortality_2011_D")
data("Covariate_C");data("Covariate_D")
data("Mortality_2015_C");data("Mortality_2015_D")
## 60*24=1440 minute level data to 24 hour data
timevec <- function(x){
mat <- matrix(x, 60, 24)
return(array(colMeans(mat, na.rm = T)))
}
y <- as.matrix(PAXINTEN_C[, 6:ncol(PAXINTEN_C)])
ydata <- apply(y, 1, timevec)
ydata <- t(ydata)
### 7176 participants for 7 days = 50232
subfreq <- array(table(PAXINTEN_C$SEQN))
sub  <- unique(PAXINTEN_C$SEQN)
### covariates for defining inclusion criteria
indr <- which(Covariate_C$SEQN %in% PAXINTEN_C$SEQN)
Covariate_Cr <- Covariate_C[indr, ]
#Inclusion criteria
ind1 <- which(as.numeric(Covariate_Cr$RIDAGEYR) < 40 &
as.numeric(Covariate_Cr$RIDAGEYR) > 30 &
Covariate_Cr$EducationAdult == "College graduate or above"
)
length(ind1)
samsub <- Covariate_Cr$SEQN[ind1]
### back to activity data
ind <- which(PAXINTEN_C$SEQN %in% samsub)
ydatar <- ydata[ind, ]
Sind1 <- (0:(nrow(ydatar)/7-1))*7+1
Sind2 <- (0:(nrow(ydatar)/7-1))*7+2
Sind3 <- (0:(nrow(ydatar)/7-1))*7+3
Sind4 <- (0:(nrow(ydatar)/7-1))*7+4
Sind5 <- (0:(nrow(ydatar)/7-1))*7+5
Sind6 <- (0:(nrow(ydatar)/7-1))*7+6
Sind7 <- (0:(nrow(ydatar)/7-1))*7+7
ydata1 <- ydatar[Sind1, ]
ind1 <- which(is.na(rowMeans(ydata1)==T))
if(length(ind1)) {ydata1 <- ydata1[-ind1, ]}
day1 = apply(ydata1,2,median)
day1.mean = colMeans(ydata1)
plot(day1.mean,type="p")
plot(day1,type="p")
ydata1.log = log(ydata1+1)
range(ydata1.log)
temp = exp(ydata1.log)
range(temp)
range(ydata1)
result1 = read.csv("ydata1.log.csv")
result2 = read.csv("ydata2.log.csv")
result3 = read.csv("ydata3.log.csv")
result4 = read.csv("ydata4.log.csv")
result5 = read.csv("ydata5.log.csv")
result6 = read.csv("ydata6.log.csv")
result7 = read.csv("ydata7.log.csv")
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
library(rnhanesdata)
require(stats)
require(graphics)
library(splines2)
library(coneproj)
library(rcdd)
library(truncnorm)
library(truncdist)
library(mvtnorm)
library(R.utils)
library(Matrix)
library(igraph)
library(MCMCpack)
library(fda)
library(nnls)
library(dplyr)
library(reshape2)
library(ggplot2)
result1 = read.csv("ydata1.log.csv")
result2 = read.csv("ydata2.log.csv")
result3 = read.csv("ydata3.log.csv")
result4 = read.csv("ydata4.log.csv")
result5 = read.csv("ydata5.log.csv")
result6 = read.csv("ydata6.log.csv")
result7 = read.csv("ydata7.log.csv")
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
result[,3:6] = exp(result[,3:6])
result1 = read.csv("ydata1.log.csv")
result2 = read.csv("ydata2.log.csv")
result3 = read.csv("ydata3.log.csv")
result4 = read.csv("ydata4.log.csv")
result5 = read.csv("ydata5.log.csv")
result6 = read.csv("ydata6.log.csv")
result7 = read.csv("ydata7.log.csv")
result = bind_rows(result1[,-1],result2[,-1],result3[,-1],result4[,-1],result5[,-1],
result6[,-1],result7[,-1],.id="id")
result.exp = exp(result[,3:6])
View(result.exp)
View(result)
library(rnhanesdata)
library(ggplot2)
## load the data
data("PAXINTEN_C");data("PAXINTEN_D")
data("Flags_C");data("Flags_D")
#data("Mortality_2011_C");data("Mortality_2011_D")
data("Covariate_C");data("Covariate_D")
data("Mortality_2015_C");data("Mortality_2015_D")
## 60*24=1440 minute level data to 24 hour data
timevec <- function(x){
mat <- matrix(x, 60, 24)
return(array(colMeans(mat, na.rm = T)))
}
y <- as.matrix(PAXINTEN_C[, 6:ncol(PAXINTEN_C)])
ydata <- apply(y, 1, timevec)
ydata <- t(ydata)
### 7176 participants for 7 days = 50232
subfreq <- array(table(PAXINTEN_C$SEQN))
sub  <- unique(PAXINTEN_C$SEQN)
### covariates for defining inclusion criteria
indr <- which(Covariate_C$SEQN %in% PAXINTEN_C$SEQN)
Covariate_Cr <- Covariate_C[indr, ]
#Inclusion criteria
ind1 <- which(as.numeric(Covariate_Cr$RIDAGEYR) < 40 &
as.numeric(Covariate_Cr$RIDAGEYR) > 30 &
Covariate_Cr$EducationAdult == "College graduate or above"
)
length(ind1)
samsub <- Covariate_Cr$SEQN[ind1]
### back to activity data
ind <- which(PAXINTEN_C$SEQN %in% samsub)
ydatar <- ydata[ind, ]
Sind1 <- (0:(nrow(ydatar)/7-1))*7+1
Sind2 <- (0:(nrow(ydatar)/7-1))*7+2
Sind3 <- (0:(nrow(ydatar)/7-1))*7+3
Sind4 <- (0:(nrow(ydatar)/7-1))*7+4
Sind5 <- (0:(nrow(ydatar)/7-1))*7+5
Sind6 <- (0:(nrow(ydatar)/7-1))*7+6
Sind7 <- (0:(nrow(ydatar)/7-1))*7+7
ydata1 <- ydatar[Sind1, ]
ind1 <- which(is.na(rowMeans(ydata1)==T))
if(length(ind1)) {ydata1 <- ydata1[-ind1, ]}
day1 = apply(ydata1,2,median)
day1.mean = colMeans(ydata1)
plot(day1.mean,type="p")
plot(day1,type="p")
ydata1.log = log(ydata1+1)
dim(ydata1)
dim(ydata1.log)
library(rnhanesdata)
require(stats)
require(graphics)
library(splines2)
library(coneproj)
library(rcdd)
library(truncnorm)
library(truncdist)
library(mvtnorm)
library(R.utils)
library(Matrix)
library(igraph)
library(MCMCpack)
library(fda)
library(nnls)
library(dplyr)
library(reshape2)
library(ggplot2)
###############model fitting
source("/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompoSpikeFinal - Mixed effect Data.R")
source('/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompo - Mixed effect Data.R')
Ti=24
n = nrow(ydata7.log)
library(rnhanesdata)
require(stats)
require(graphics)
library(splines2)
library(coneproj)
library(rcdd)
library(truncnorm)
library(truncdist)
library(mvtnorm)
library(R.utils)
library(Matrix)
library(igraph)
library(MCMCpack)
library(fda)
library(nnls)
library(dplyr)
library(reshape2)
library(ggplot2)
###############model fitting
source("/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompoSpikeFinal - Mixed effect Data.R")
source('/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompo - Mixed effect Data.R')
Ti=24
n = nrow(ydata1.log)
y = as.numeric(t(ydata1.log))
y[1:24]
y[25:48]
dim(y)
library(rnhanesdata)
library(ggplot2)
## load the data
data("PAXINTEN_C");data("PAXINTEN_D")
data("Flags_C");data("Flags_D")
#data("Mortality_2011_C");data("Mortality_2011_D")
data("Covariate_C");data("Covariate_D")
data("Mortality_2015_C");data("Mortality_2015_D")
## 60*24=1440 minute level data to 24 hour data
timevec <- function(x){
mat <- matrix(x, 60, 24)
return(array(colMeans(mat, na.rm = T)))
}
y <- as.matrix(PAXINTEN_C[, 6:ncol(PAXINTEN_C)])
ydata <- apply(y, 1, timevec)
ydata <- t(ydata)
### 7176 participants for 7 days = 50232
subfreq <- array(table(PAXINTEN_C$SEQN))
sub  <- unique(PAXINTEN_C$SEQN)
### covariates for defining inclusion criteria
indr <- which(Covariate_C$SEQN %in% PAXINTEN_C$SEQN)
Covariate_Cr <- Covariate_C[indr, ]
#Inclusion criteria
ind1 <- which(as.numeric(Covariate_Cr$RIDAGEYR) < 40 &
as.numeric(Covariate_Cr$RIDAGEYR) > 30 &
Covariate_Cr$EducationAdult == "College graduate or above"
)
length(ind1)
samsub <- Covariate_Cr$SEQN[ind1]
### back to activity data
ind <- which(PAXINTEN_C$SEQN %in% samsub)
ydatar <- ydata[ind, ]
dim(ydatar)
write.csv("ydatar.csv")
write.csv(ydatar,"ydatar.csv")
#write.csv(ydatar,"ydatar.csv")
ydatar = read.csv("ydatar.csv")
View(ydatar)
ydatar = ydatar[,-1]
View(ydatar)
library(rnhanesdata)
require(stats)
require(graphics)
library(splines2)
library(coneproj)
library(rcdd)
library(truncnorm)
library(truncdist)
library(mvtnorm)
library(R.utils)
library(Matrix)
library(igraph)
library(MCMCpack)
library(fda)
library(nnls)
library(dplyr)
library(reshape2)
library(ggplot2)
###############model fitting
source("/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompoSpikeFinal - Mixed effect Data.R")
source('/Users/pro/Desktop/Backup/priors_on_cone/projects/arkaprava_v1/fittingCompo - Mixed effect Data.R')
ydatar = read.csv("ydatar.csv")
ydatar = ydatar[,-1]
Sind1 <- (0:(nrow(ydatar)/7-1))*7+1
Sind2 <- (0:(nrow(ydatar)/7-1))*7+2
Sind3 <- (0:(nrow(ydatar)/7-1))*7+3
Sind4 <- (0:(nrow(ydatar)/7-1))*7+4
Sind5 <- (0:(nrow(ydatar)/7-1))*7+5
Sind6 <- (0:(nrow(ydatar)/7-1))*7+6
Sind7 <- (0:(nrow(ydatar)/7-1))*7+7
ydata1 <- ydatar[Sind1, ]
ind1 <- which(is.na(rowMeans(ydata1)==T))
if(length(ind1)) {ydata1 <- ydata1[-ind1, ]}
day1 = apply(ydata1,2,median)
day1.mean = colMeans(ydata1)
plot(day1.mean,type="p")
plot(day1,type="p")
ydata1.log = log(ydata1+1)
range(ydata1)
